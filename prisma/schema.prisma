// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int         @id @default(autoincrement())
  name            String?
  username        String?     @unique
  email           String?     @unique
  emailVerified   DateTime?
  image           String?
  password        String?
  role            String?
  accounts        Account[]
  sessions        Session[]
  updatedAt       DateTime      @updatedAt
  createdAt       DateTime      @default(now())
}

model Account {
  id                 Int         @id @default(autoincrement())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id                 Int         @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Destination {
  did                Int       @id @default(autoincrement())
  name               String    @unique
  heading            String    @unique
  heroTitle          String?
  country            String?
  overview           String?   @db.Text
  text               String?
  imageUrl           String?
  thumbnailUrl       String?
  isRichText         Boolean?  @default(false)
  trending           Boolean   @default(false)
  featured           Boolean   @default(false)
  status             Boolean   @default(false)
  basePrice          Int?
  originalPrice      Int?
  rating             Float?
  bestTimeToVisit    String?
  highlights         String?
  packages           Package[]
  reviews            Reviews[]
  updatedAt          DateTime  @updatedAt
  createdAt          DateTime  @default(now())
}

model City {
  cid                       Int           @id @default(autoincrement())
  name                      String        @unique
  description               String?       @db.Text
  imageUrl                  String?
  mustSeeAttractions        Json?         
  activities                Json?       
  status                    Boolean?      @default(false)
  hotels                    Hotel[]
  packages                  Package[] 
  createdAt                 DateTime      @default(now())
}

model Hotel {
  hid         Int                  @id @default(autoincrement())
  name        String       
  description String
  starRating  Int
  city        City                 @relation(fields: [cityId], references: [cid])
  cityId      Int
  status      Boolean?             @default(false)
  prices      PackageHotelPrice[]
  images      HotelImage[]
  createdAt   DateTime             @default(now())
}

model HotelImage {
  hiid        Int         @id @default(autoincrement())
  url         String
  caption     String?
  hotel       Hotel       @relation(fields: [hotelId], references: [hid])
  hotelId     Int
  status      Boolean?    @default(false)
  updatedAt   DateTime    @updatedAt
  createdAt   DateTime    @default(now())
}

model Package {
  pid             Int          @id @default(autoincrement())
  name            String       @unique
  slug            String       @unique
  threePrice      Int?
  fourPrice       Int?
  fivePrice       Int?
  imageUrl        String?
  thumbnailUrl    String?
  day             Int?
  night           Int?
  popular         Boolean?  @default(false)
  featured        Boolean?  @default(false)
  isRichText      Boolean?  @default(false)
  status          Boolean   @default(false)
  overview        String?   @db.Text
  rating          Float?
  heroTitle       String?  @db.Text
  text            String?
  category        String?
  destination     Destination  @relation(fields: [destinationId], references: [did])
  destinationId   Int
  itineraries     Itinerary[]
  hotelPrices     PackageHotelPrice[]
  tours           Tours[]
  cities          City[]
  highlights      Highlight[]
  inclusions      Inclusion[]
  exclusions      Exclusion[]
  reviews         Reviews[]
  updatedAt       DateTime  @updatedAt
  createdAt       DateTime  @default(now())
}

model PackageHotelPrice {
  phid          Int     @id @default(autoincrement())
  basePrice     Int?
  originalPrice Int?
  hotel         Hotel   @relation(fields: [hotelId], references: [hid])
  hotelId       Int
  package       Package @relation(fields: [packageId], references: [pid])
  packageId     Int
  status        Boolean?   @default(false)
  updatedAt     DateTime  @updatedAt
  createdAt     DateTime  @default(now())

}

model Itinerary {
  itid        Int        @id @default(autoincrement())
  day         Json?
  title       String
  subTitle    String?
  isRichText  Boolean    @default(false)
  status      Boolean?   @default(false)
  package     Package    @relation(fields: [packageId], references: [pid])
  packageId   Int        @unique
  highlights  Highlight[]
  updatedAt   DateTime  @updatedAt
  createdAt   DateTime  @default(now())
}

model Highlight {
  hlid        Int       @id @default(autoincrement())
  text        String    @unique
  status    Boolean?   @default(false)
  packages    Package[] 
  itineraries Itinerary[]
  updatedAt   DateTime  @updatedAt
  createdAt   DateTime  @default(now())
}

model Inclusion {
  lid         Int       @id @default(autoincrement())
  text        String    @unique
  status      Boolean?   @default(false)
  packages    Package[] 
  updatedAt   DateTime  @updatedAt
  createdAt   DateTime  @default(now())
}

model Exclusion {
  eid         Int       @id @default(autoincrement())
  text        String    @unique
  status      Boolean?   @default(false)
  packages    Package[] 
  updatedAt   DateTime  @updatedAt
  createdAt   DateTime  @default(now())
}

model Tours {
  tid         Int       @id @default(autoincrement())
  text        String    @unique
  icon        String?
  description String    @db.Text
  basePrice   Int?
  status      Boolean?   @default(false)
  packages    Package[] 
  updatedAt   DateTime  @updatedAt
  createdAt   DateTime  @default(now())
}

model Reviews {
  id        Int      @id @default(autoincrement())
  username  String   @db.VarChar(100)
  places    String   @db.VarChar(255)
  review    String   @db.Text
  rating    Float?
  status    Boolean?   @default(false)
  year      String?
  month     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  packageId     Int
  package       Package     @relation(fields: [packageId], references: [pid], onDelete: Cascade)

  destinationId Int
  destination   Destination @relation(fields: [destinationId], references: [did])  
}

model GoogleCredentials {
  id           Int      @id @default(autoincrement())
  accessToken  String   @db.Text
  refreshToken String?  @db.Text
  expiresAt    DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("google_credentials")
}

model Inquiry {
 inid         Int      @id @default(autoincrement())
 name         String?
 email        String?
 mobile       String?
 destination  String?
 budget       String?
 travellers   String?
 message      String?  @db.Text
 createdAt    DateTime @default(now())
}
